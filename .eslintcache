[{"/Users/brock/Desktop/postGA/django/react-schedule-component/src/reportWebVitals.js":"1","/Users/brock/Desktop/postGA/django/react-schedule-component/src/App.js":"2","/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/Calendar.js":"3","/Users/brock/Desktop/postGA/django/react-schedule-component/src/index.js":"4","/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/Months.js":"5","/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/IndividualMonth.js":"6","/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/DayDetail.js":"7","/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/Today.js":"8","/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/TodayCopy.js":"9"},{"size":362,"mtime":1607617290208,"results":"10","hashOfConfig":"11"},{"size":770,"mtime":1607977697728,"results":"12","hashOfConfig":"11"},{"size":830,"mtime":1607626476876,"results":"13","hashOfConfig":"11"},{"size":539,"mtime":1607627076239,"results":"14","hashOfConfig":"11"},{"size":863,"mtime":1607632907497,"results":"15","hashOfConfig":"11"},{"size":1233,"mtime":1607632798957,"results":"16","hashOfConfig":"11"},{"size":1833,"mtime":1607972258230,"results":"17","hashOfConfig":"11"},{"size":1351,"mtime":1607977053141,"results":"18","hashOfConfig":"11"},{"size":2622,"mtime":1607982469035,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bg40d2",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brock/Desktop/postGA/django/react-schedule-component/src/reportWebVitals.js",[],"/Users/brock/Desktop/postGA/django/react-schedule-component/src/App.js",["41"],"import './App.css';\n// import Calendar from \"./schedule/Calendar\"\nimport { Route, Switch } from \"react-router-dom\"\n\nimport Months from \"./schedule/Months\"\nimport Individualmonth from \"./schedule/IndividualMonth\"\nimport DayDetail from \"./schedule/DayDetail\"\nimport TodayCopy from './schedule/TodayCopy';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        {/* <Route exact path=\"/\" render={(props) => (<Months {...props} />)} /> */}\n        <Route exact path=\"/\" render={(props) => (<TodayCopy {...props} />)} />\n        <Route path=\"/month/:month\" render={(props) => (<Individualmonth {...props} />)} />\n        <Route path=\"/detail/:day\" render={(props) => (<DayDetail {...props} />)} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/Calendar.js",[],"/Users/brock/Desktop/postGA/django/react-schedule-component/src/index.js",[],"/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/Months.js",[],"/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/IndividualMonth.js",["42","43"],"import React, { useState } from \"react\"\nimport moment from \"moment\"\nimport { Link } from \"react-router-dom\"\n\n\nconst IndividualMonth = (props) => {\n\n  const [tempMonth, setTempMonth] = useState(props.match.params.month.split(\"-\")[0])\n  const [tempYear, setTempYear] = useState(props.match.params.month.split(\"-\")[1])\n\n  const month = moment(tempMonth).clone().format(\"MMMM\")\n  const year = moment(tempYear).clone().format(\"YYYY\")\n  const agDate = month + \" \" + year\n  const agDateParse = moment(month + \"/01/\" + year)\n\n  const firstDay = agDateParse.clone().startOf(\"month\").startOf(\"day\").subtract(1, \"day\")\n  const lastDay = agDateParse.clone().endOf(\"month\").endOf(\"day\")\n\n  // console.log(firstDay.format(\"MM-DD-YYYY\"))\n  // console.log(lastDay.format(\"MM-DD-YYYY\"))\n\n  const dayList = []\n\n  while (firstDay.isBefore(lastDay, \"day\")) {\n    dayList.push(firstDay.add(1, \"day\").clone().format(\"ddd MM-DD-YYYY\"))\n  }\n\n  // console.log(dayList)\n\n  const dayArray = dayList.map((element, index) => {\n    return (\n      <Link to={`/detail/${element.split(\" \")[1]}`}>\n        <h4 key={index}>{element}</h4>\n      </Link>\n    )\n  })\n\n  return (\n    <>\n      <h1>{agDate}</h1>\n      {dayArray}\n    </>\n  )\n}\n\nexport default IndividualMonth","/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/DayDetail.js",["44","45","46"],"import React, { useEffect, useState } from \"react\"\nimport moment from \"moment\"\nimport { Link } from \"react-router-dom\"\nimport axios from \"axios\"\n\nconst DayDetail = (props) => {\n\n  // const [currentDay, setCurrentDay] = useState(props.match.params.day)\n  const [currentDayMoment, setCurrentDayMoment] = useState(moment(props.match.params.day))\n  const [alert, setAlert] = useState(\"\")\n  const [appointments, setAppointments] = useState([])\n\n  useEffect(() => {\n    const makeApiCall = () => {\n      axios.get(`http://127.0.0.1:8000/days/${currentDayMoment.format(\"YYYY-MM-DD\")}/appointments/`,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            // 'Authorization': 'Token 43e647722ff3daa8561ab96a60d57298fe23d45e'\n          }\n        })\n        .then((response) => {\n          // console.log(response.data.day.appointments)\n          if (response.data.day.appointments.length === 0) {\n            setAlert(\"There Are No Appointments Today\")\n          } else {\n            setAlert(`${response.data.day.appointments.length} Appointment(s) Today`)\n            setAppointments(response.data.day.appointments)\n          }\n        })\n        .catch((error) => {\n          setAlert(\"0 Appointments Today\")\n        })\n    }\n    makeApiCall()\n  }, [])\n\n  console.log(appointments)\n\n  const appointmentArray = appointments.map((element, index) => {\n    return (\n      <div key={index}>\n        <h4>Start Time: {element.start_time}</h4>\n        <h4>End Time: {element.end_time}</h4>\n        <h4>Client: {element.client}</h4>\n        <h4>Trainer: {element.trainer}</h4>\n      </div>\n\n    )\n  })\n\n  return (\n    <>\n      <h1>{currentDayMoment.format(\"dddd MM/DD/YYYY\")}</h1>\n      {alert ? <h4>{alert}</h4> : null}\n      {appointmentArray ? appointmentArray : null}\n\n    </>\n  )\n}\n\nexport default DayDetail","/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/Today.js",[],"/Users/brock/Desktop/postGA/django/react-schedule-component/src/schedule/TodayCopy.js",[],{"ruleId":"47","severity":1,"message":"48","line":5,"column":8,"nodeType":"49","messageId":"50","endLine":5,"endColumn":14},{"ruleId":"47","severity":1,"message":"51","line":8,"column":21,"nodeType":"49","messageId":"50","endLine":8,"endColumn":33},{"ruleId":"47","severity":1,"message":"52","line":9,"column":20,"nodeType":"49","messageId":"50","endLine":9,"endColumn":31},{"ruleId":"47","severity":1,"message":"53","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":14},{"ruleId":"47","severity":1,"message":"54","line":9,"column":28,"nodeType":"49","messageId":"50","endLine":9,"endColumn":47},{"ruleId":"55","severity":1,"message":"56","line":36,"column":6,"nodeType":"57","endLine":36,"endColumn":8,"suggestions":"58"},"no-unused-vars","'Months' is defined but never used.","Identifier","unusedVar","'setTempMonth' is assigned a value but never used.","'setTempYear' is assigned a value but never used.","'Link' is defined but never used.","'setCurrentDayMoment' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentDayMoment'. Either include it or remove the dependency array.","ArrayExpression",["59"],{"desc":"60","fix":"61"},"Update the dependencies array to be: [currentDayMoment]",{"range":"62","text":"63"},[1279,1281],"[currentDayMoment]"]